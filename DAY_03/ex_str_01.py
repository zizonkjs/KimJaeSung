#------------------------------------------------
# 문자열 str 데이터 다루기
#------------------------------------------------
# 여러줄 문자열 ==> """ """ or ''' '''
msg='''
오늘은

좋은날
기쁜날

'''

print(f"msg => {msg}")

print("-----------------------------------------------------")

# indxing : 문자열 안에 문자 한개 한개를 식별하는 방법
# 원소 or 요소 : 문자열 안에 문자 한개를 의미
# 사용방법 : 변수명[인덱스번호], 문자열데이터[인덱스]
# 인덱스의 종류 
# 1. 왼 >>> 오 : 0, 1, ....., 10
# 2. 왼 <<< 오 : -1, -2, .... -10

msg="Good Luck!"
msg2="" # empty string 빈문자열
print(msg)

# 문자열 전체 출력
print(msg)

# 문자열 내 원소
print(msg[0])
print(msg[4])
print(msg[-1])
# print(msg2[0]) 빈문자열일 경우에는 error 발생.

print("-----------------------------------------------------")

# 원소 or 요소의 갯수를 파악해주는 내장함수 len()
# 원소 or 요소를 가지고 있는 데이터 타입에만 사용 가능
print(len(msg))

# 제일마지막 원소 or 요소만 출력
print(msg[3], msg[len(msg)-1], msg[-1])

print("-----------------------------------------------------")

data="Happy New Year 2025! Good Luck"
print(f'인덱스 범위 : 0 ~ {len(data)-1}')
print(data[-15], data[-14], data[-13], data[-12], data[-11], sep='')
print(data[-15:-10])

a = "Life is short, you need python"
print(f"라이프만 출력 : {a[0:4]} ")
print(f"모두 출력하기 : {a[0:]} ") # 인덱스가 비어있는 경우는 끝까지
print(f"모두 출력하기 2 : {a[:]}") # 처음부터 끝까지라는 의미
print(f"need python 출력하기 : {a[19:35]} ")

print("-----------------------------------------------------")

# 슬라이싱 : 문자열 내에 연속된 문자 요소or원소 추출 방법
# 문법 : 변수명[시작:끝+1] 시작인덱스 이상(>=, <=), 끝인덱스는 미만(>,<)

#-------------------------------------------------------------------------------
# 슬라이싱 : 문자열 내에 규칙/패턴을 가진 문자 요소or원소 추출 방법
# 문법 : 변수명[시작:끝+1:간격]
data='123456789'

# 2,4,6,8 만 추출하기
print(data[1::2])

data="ABC1DEF2GHI3JKL4MNO5PQR6STU" # 문자열에서 숫자만 출력해보기.
print(data[3::4])

